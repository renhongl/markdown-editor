{"version":3,"sources":["markdownEditor/Preview.js","markdownEditor/DocumentList.js","markdownEditor/ExtendPanel.js","markdownEditor/Drawer.js","markdownEditor/AppBar.js","markdownEditor/Markdown.js","markdownEditor/MarkdownEditor.js","index.js"],"names":["md","MarkdownIt","html","linkify","typographer","highlight","str","lang","hljs","getLanguage","value","__","utils","escapeHtml","Preview","input","this","props","result","render","react_default","a","createElement","className","id","dangerouslySetInnerHTML","__html","React","Component","CheckboxList","state","checked","handleToggle","_this","currentIndex","indexOf","newChecked","Object","toConsumableArray","push","splice","setState","handleAction","index","toggleDrawer","switchCurrent","_this2","_this$props","classes","fileList","List_default","root","map","item","ListItem_default","key","role","undefined","dense","button","onClick","ListItemText_default","primary","title","ListItemSecondaryAction_default","IconButton_default","aria-label","withStyles","theme","width","maxWidth","backgroundColor","palette","background","paper","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","Typography_default","ExpansionPanelDetails_default","DocumentList","TemporaryDrawer","open","Drawer_default","onClose","tabIndex","list","onKeyDown","ExtendPanel","MenuAppBar","auth","anchorEl","handleChange","event","target","handleMenu","currentTarget","handleClose","type","exportPdf","exportMD","_this$state","Boolean","AppBar_default","position","Toolbar_default","menuButton","color","Menu_default","variant","grow","aria-owns","aria-haspopup","core_Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem_default","flexGrow","marginLeft","marginRight","Markdown","handleValueChange","myCodeMirror","CodeMirror","document","querySelector","mode","name","highlightFormatting","lineNumbers","on","b","getValue","react","styles","container","height","left","float","right","overflow","MarkdownEditor","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateFileList","element","getElementById","html2pdf","set","margin","filename","image","quality","pagebreak","html2canvas","dpi","letterRendering","useCORS","imageTimeout","jsPDF","unit","format","orientation","from","save","content","innerText","download","current","setTimeout","handleEvents","updateScroll","scroll","text","converter","Showdown","tables","simplifiedAutoLink","newFileList","JSON","parse","stringify","forEach","i","_this3","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","filter","preview","scroolDom","timer","reset","clearTimeout","addEventListener","e","scrollScale","scrollTop","scrollHeight","clientHeight","markdownEditor_AppBar","markdownEditor_Drawer","Markdown_Markdown","Preview_Preview","MarkdownEditor_MarkdownEditor"],"mappings":"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","file":"static/js/main.5c9dad6c.chunk.js","sourcesContent":["import React from \"react\";\nimport hljs from \"highlight.js\";\nimport MarkdownIt from \"markdown-it\";\nimport \"highlight.js/styles/atom-one-light.css\";\n\nconst md = new MarkdownIt({\n  html: true,\n  linkify: true,\n  typographer: true,\n  highlight: function(str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return (\n          '<pre class=\"hljs\"><code>' +\n          hljs.highlight(lang, str, true).value +\n          \"</code></pre>\"\n        );\n      } catch (__) {}\n    }\n    return (\n      '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + \"</code></pre>\"\n    );\n  }\n});\n\nexport default class Preview extends React.Component {\n  render() {\n    const { input } = this.props;\n    const result = md.render(input);\n    return (\n      <div className=\"preview-container\">\n        <div className=\"preview-title\">\n          <div className=\"preview-title-left\">Preview</div>\n        </div>\n        <div className=\"preview\">\n          <div id=\"content\" dangerouslySetInnerHTML={{ __html: result }} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nclass CheckboxList extends React.Component {\n  state = {\n    checked: [0]\n  };\n\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked\n    });\n  };\n\n  handleAction = index => () => {\n    this.props.toggleDrawer();\n    this.props.switchCurrent(index);\n  };\n\n  render() {\n    const { classes, fileList } = this.props;\n    return (\n      <List className={classes.root}>\n        {fileList.map((item, index) => (\n          <ListItem\n            key={item.id}\n            role={undefined}\n            dense\n            button\n            onClick={this.handleToggle()}\n          >\n            <ListItemText primary={item.title} />\n            <ListItemSecondaryAction>\n              <IconButton\n                aria-label=\"Comments\"\n                onClick={this.handleAction(index)}\n              >\n                <i className=\"material-icons\">border_color</i>\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n}\n\nCheckboxList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(CheckboxList);\n","import DocumentList from './DocumentList';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n});\n\nfunction SimpleExpansionPanel(props) {\n  const { classes, fileList, switchCurrent, toggleDrawer } = props;\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <Typography className={classes.heading}>DOCUMENTS</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <DocumentList fileList={fileList} switchCurrent={switchCurrent} toggleDrawer={toggleDrawer}/>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n\nSimpleExpansionPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleExpansionPanel);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ExtendPanel from './ExtendPanel';\n\nconst styles = {\n  list: {\n    width: 250,\n  },\n};\n\nclass TemporaryDrawer extends React.Component {\n  render() {\n    const { classes, open, toggleDrawer, fileList, switchCurrent } = this.props;\n    return (\n      <div>\n        <Drawer open={open} onClose={toggleDrawer}>\n          <div\n            tabIndex={0}\n            role=\"button\"\n            className={classes.list}\n            onKeyDown={toggleDrawer}\n          >\n            <h1>柚子</h1>\n            <ExtendPanel fileList={fileList} switchCurrent={switchCurrent} toggleDrawer={toggleDrawer}/>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nTemporaryDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TemporaryDrawer);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nclass MenuAppBar extends React.Component {\n  state = {\n    auth: true,\n    anchorEl: null,\n  };\n\n  handleChange = event => {\n    this.setState({ auth: event.target.checked });\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = (type) => {\n    this.setState({ anchorEl: null });\n    if (type && type === 'pdf') {\n      this.props.exportPdf();\n    }\n    if (type && type === 'md') {\n      this.props.exportMD();\n    }\n  };\n\n  render() {\n    const { classes, toggleDrawer } = this.props;\n    const { auth, anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={toggleDrawer}>\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n              Markdown Editor by 柚子\n            </Typography>\n            {auth && (\n              <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <i className=\"material-icons\">\n                    import_export\n                  </i>\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={() => this.handleClose('pdf')}>EXPORT AS PDF</MenuItem>\n                  <MenuItem onClick={() => this.handleClose('md')}>EXPORT AS MARKDOWN</MenuItem>\n                </Menu>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nMenuAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MenuAppBar);","import * as React from \"react\";\nimport CodeMirror from \"codemirror\";\nimport temp from \"codemirror/mode/markdown/markdown\";\n\nexport default class Markdown extends React.Component {\n  componentDidMount() {\n    const { value, handleValueChange } = this.props;\n    this.myCodeMirror = CodeMirror(document.querySelector(\".markdown\"), {\n      value: value,\n      mode: { name: \"markdown\", highlightFormatting: true },\n      lineNumbers: true\n    });\n    this.myCodeMirror.on(\"change\", (a, b) => {\n      handleValueChange(this.myCodeMirror.getValue());\n    });\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <div className=\"markdown-container\">\n        <div className=\"markdown-title\">{title}</div>\n        <div className=\"markdown\" />\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport * as Showdown from \"showdown\";\nimport Preview from \"./Preview\";\nimport \"draft-js/dist/Draft.css\";\nimport \"./style.css\";\nimport Drawer from \"./Drawer\";\nimport AppBar from \"./AppBar\";\nimport Markdown from \"./Markdown\";\nimport html2pdf from \"html2pdf.js\";\n\nconst styles = {\n  container: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  left: {\n    width: \"50%\",\n    float: \"left\",\n    height: \"calc(100% - 66px)\"\n  },\n  right: {\n    width: \"50%\",\n    float: \"left\",\n    height: \"calc(100% - 66px)\",\n    overflow: \"hidden\"\n  }\n};\n\nexport default class MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 0,\n      left: false,\n      scroll: false,\n      fileList: [\n        {\n          id: 0,\n          title: \"example 1\",\n          text: \"# test\"\n        },\n        {\n          id: 1,\n          title: \"example 2\",\n          text: \"**this is a good words**\"\n        }\n      ]\n    };\n    this.converter = new Showdown.Converter({\n      tables: true,\n      simplifiedAutoLink: true\n    });\n  }\n\n  handleValueChange = value => {\n    this.updateFileList(value);\n  };\n\n  updateFileList(value) {\n    let newFileList = JSON.parse(JSON.stringify(this.state.fileList));\n    newFileList.forEach((item, i) => {\n      if (i === this.state.current) {\n        item.text = value;\n      }\n    });\n    this.setState({\n      fileList: newFileList\n    });\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.handleEvents();\n    }, 700);\n  }\n\n  toggleDrawer = () => {\n    this.setState({\n      left: !this.state.left\n    });\n  };\n\n  exportPdf = () => {\n    var element = document.getElementById(\"content\");\n    var opt = {\n      margin: 1,\n      filename: \"markdown.pdf\",\n      image: { type: \"jpeg\", quality: 0.98 },\n      pagebreak: { mode: [\"avoid-all\", \"css\", \"legacy\"] },\n      html2canvas: {\n        dpi: 192,\n        letterRendering: true,\n        useCORS: true,\n        imageTimeout: 0\n      },\n      useCORS: true,\n      jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" }\n    };\n    html2pdf()\n      .set(opt)\n      .from(element)\n      .save();\n  };\n\n  exportMD = () => {\n    const content = document.querySelector(\".public-DraftEditor-content\")\n      .innerText;\n    this.download(\"markdown.md\", content);\n  };\n\n  download(filename, text) {\n    var element = document.createElement(\"a\");\n    element.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n    );\n    element.setAttribute(\"download\", filename);\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  getFileObj(id) {\n    return this.state.fileList.filter(item => item.id === id)[0];\n  }\n\n  switchCurrent = id => {\n    this.setState({\n      current: -1\n    });\n    setTimeout(() => {\n      this.setState({\n        current: id\n      });\n    }, 500);\n    setTimeout(() => {\n      this.handleEvents();\n    }, 700);\n  };\n\n  handleEvents() {\n    let preview = document.querySelector(\".preview\");\n    let md = document.querySelector(\".CodeMirror-scroll\");\n    let scroolDom = -1;\n    let timer = null;\n    const reset = () => {\n      if (timer !== null) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(function() {\n        scroolDom = -1;\n      }, 20);\n    };\n    md.addEventListener(\"scroll\", e => {\n      if (scroolDom === -1) {\n        scroolDom = 0;\n        let scrollScale =\n          e.target.scrollTop / (e.target.scrollHeight - e.target.clientHeight);\n        preview.scrollTop =\n          (preview.scrollHeight - preview.clientHeight) * scrollScale;\n        reset();\n      }\n    });\n\n    preview.addEventListener(\"scroll\", e => {\n      if (scroolDom === -1) {\n        scroolDom = 1;\n        let scrollScale =\n          e.target.scrollTop / (e.target.scrollHeight - e.target.clientHeight);\n        md.scrollTop = (md.scrollHeight - md.clientHeight) * scrollScale;\n        reset();\n      }\n    });\n  }\n\n  updateScroll = value => {\n    this.setState({\n      scroll: value\n    });\n  };\n\n  render() {\n    const { fileList, left, current, scroll } = this.state;\n    return (\n      <div style={styles.container}>\n        <AppBar\n          toggleDrawer={this.toggleDrawer}\n          exportMD={this.exportMD}\n          exportPdf={this.exportPdf}\n        />\n        <Drawer\n          open={left}\n          toggleDrawer={this.toggleDrawer}\n          fileList={fileList}\n          switchCurrent={this.switchCurrent}\n        />\n        <div style={styles.left}>\n          {current !== -1 ? (\n            <Markdown\n              title={fileList[current].title}\n              handleValueChange={this.handleValueChange}\n              value={fileList[current].text}\n              current={current}\n              scroll={scroll}\n              updateScroll={this.updateScroll}\n            />\n          ) : null}\n        </div>\n        <div style={styles.right}>\n          {current !== -1 ? (\n            <Preview\n              scroll={scroll}\n              updateScroll={this.updateScroll}\n              input={fileList[current].text}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { view as MarkdownEditor } from \"./markdownEditor\";\n\nimport \"./styles.css\";\n\nconst App = () => <MarkdownEditor />;\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}